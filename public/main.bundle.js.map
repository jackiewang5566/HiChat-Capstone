{"version":3,"sources":["/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src async","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/Models/error.model.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.module.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.routes.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/clickOutside.directive.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/models/user.model.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/auth.service.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/error.service.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/users.service.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/shared/equal-validator.directive.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/environments/environment.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","export class Error {\n    constructor(public success: string, \n                public message: string) {}\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/Models/error.model.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'app/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private Auth: AuthService) {\n\n  }\n\n  ngOnInit() {\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// third party library\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n// import Components\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\n// import Services\nimport { AuthService } from './services/auth.service';\nimport { ErrorService } from './services/error.service';\nimport { UsersService } from './services/users.service';\n\n// import routing\nimport { routing } from 'app/app.routes';\nimport { HomeComponent } from './components/home/home.component';\nimport { CheckboxComponent } from './components/shared/checkbox/checkbox.component';\n\n// import directive\nimport { ClickOutsideDirective } from './components/shared/clickOutside.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NavbarComponent,\n    SignupComponent,\n    HomeComponent,\n    CheckboxComponent,\n    ClickOutsideDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    NgxDatatableModule,\n    routing\n  ],\n  providers: [\n    AuthService,\n    ErrorService,\n    UsersService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from 'app/app.component';\nimport { LoginComponent } from 'app/components/login/login.component';\nimport { SignupComponent } from 'app/components/signup/signup.component';\nimport { HomeComponent } from 'app/components/home/home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: 'home',\n        component: HomeComponent\n    },\n    // {\n    //     path: 'profile/:userId',\n    //     component: ProfileComponent\n    // },\n    {\n        path: '**',\n        redirectTo: 'login'\n    }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.routes.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <input type=\\\"text\\\" class=\\\"form-control mb-3\\\" placeholder=\\\"Search for user to chat\\\">\\n\\n  <div class=\\\"card bg-light\\\">\\n      <h3>Diagnosed Condition</h3>\\n      {{ rows | json }}\\n      <div class=\\\"mb-3 mt-3\\\" style=\\\"z-index: 1;\\\">\\n          <ngx-datatable\\n          #mydatatable\\n          (select)=\\\"onSelect($event)\\\"\\n          [selectionType]=\\\"'single'\\\"\\n          [selected]=\\\"selected\\\"\\n          (activate)=\\\"onActivate($event)\\\"\\n          [headerHeight]=\\\"30\\\"\\n          [limit]=\\\"5\\\"\\n          [columnMode]=\\\"'force'\\\"\\n          [footerHeight]=\\\"30\\\"\\n          [rowHeight]=\\\"40\\\"\\n          [rowClass]=\\\"getRowClass\\\"\\n          [rows]=\\\"rows\\\">\\n          <ngx-datatable-column name=\\\"Condition Type\\\">\\n            <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                <select\\n                    *ngIf=\\\"!row.dummy\\\"\\n                    [(ngModel)]=\\\"row.conditionType\\\"\\n                    name=\\\"conditionType\\\"\\n                    class=\\\"form-control\\\">\\n                <option value=\\\"\\\">Select Condition Type</option>\\n                <option [ngValue]=\\\"row.conditionType\\\">{{ row.conditionType }}</option>\\n              </select>\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Condition\\\">\\n            <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n              <input \\n                  *ngIf=\\\"!row.dummy\\\"\\n                  type=\\\"text\\\" \\n                  class=\\\"form-control\\\"\\n                  name=\\\"condition\\\"\\n                  [(ngModel)]=\\\"row.condition\\\">\\n            </ng-template>\\n          </ngx-datatable-column>\\n          <ngx-datatable-column name=\\\"Date of Diagnosis\\\">\\n            <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                <div class=\\\"form-inline\\\" *ngIf=\\\"!row.dummy\\\">\\n                    <div class=\\\"form-group\\\" #container>\\n                      <div class=\\\"input-group\\\" (click)=\\\"d.toggle(); openDatepicker(d)\\\">\\n                        <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\"\\n                               name=\\\"dp\\\" [(ngModel)]=\\\"row.dateOfDiagnosis\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\n                        <button class=\\\"input-group-addon\\\" type=\\\"button\\\">\\n                          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\"></i>\\n                        </button>\\n                      </div>\\n                    </div>\\n                </div>\\n            </ng-template>\\n          </ngx-datatable-column>\\n    \\n          <!-- <ngx-datatable-footer>\\n              <ng-template \\n                ngx-datatable-footer-template \\n                let-rowCount=\\\"rowCount\\\"\\n                let-pageSize=\\\"pageSize\\\"\\n                let-selectedCount=\\\"selectedCount\\\"\\n                let-curPage=\\\"curPage\\\"\\n                let-offset=\\\"offset\\\">\\n                <div class=\\\"pager\\\">\\n                  \\n                </div>\\n              </ng-template>\\n            </ngx-datatable-footer> -->\\n        </ngx-datatable>\\n      </div>\\n      <div class=\\\"row form-group mx-0\\\">\\n          <div class=\\\"col-md-3 mt-2\\\">\\n            <checkbox [size]=\\\"'sm'\\\" [label]=\\\"'No Medical Condition'\\\" [position]=\\\"'right'\\\" [(check)]=\\\"noMedicalConditionFlag\\\" (checkChange)=\\\"noMedicalCondition(noMedicalConditionFlag)\\\"></checkbox>\\n          </div>\\n          <div class=\\\"col-md-4 offset-md-5\\\" style=\\\"z-index: 0;\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"addRow()\\\">\\n              Add Condition\\n            </button>\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"removeRow()\\\">\\n              Remove Condition\\n            </button>\\n          </div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"col-12 mt-3\\\">\\n      <div class=\\\"card bg-secondary\\\">\\n        <h5>Test</h5>\\n      </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = 1","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  host: {\n    '(document: click)': 'closeDatepicker($event)'\n  }\n})\nexport class HomeComponent implements OnInit {\n  @ViewChild('container') container;\n  @ViewChild('input[ngbDatepicker]') datePicker;\n\n  dynamicId;\n\n  noMedicalConditionFlag: boolean = false;\n  rows = [\n    {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": true,\n      \"active\": false\n    },\n    {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": true,\n      \"active\": false\n    },\n    {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": true,\n      \"active\": false\n    },\n    {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": true,\n      \"active\": false\n    },\n    {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": true,\n      \"active\": false\n    }\n  ];\n  dummyRows;\n\n  selected = [];\n\n  constructor(private _eref: ElementRef) {\n    this.dummyRows = this.rows;\n  }\n\n  ngOnInit() {\n  }\n\n  getCellClass({ row, column, value }): any {\n    return {\n      'table-cell': true\n    }\n  }\n\n  getRowClass(row) {\n    console.log(row);\n    return {\n      'activeRowClass': row.active\n    }\n  }\n\n  prevSelected;\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n    if (this.prevSelected) {\n      this.prevSelected[0].active = false;\n    }\n    \n    selected[0].active = true;\n    this.prevSelected = selected;\n  }\n\n  onActivate(event) {\n    // console.log('Activate Event', event);\n  }\n\n  addRow() {\n    let newRow = {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": false,\n      \"active\": false\n    };\n    // if (this.rows[0].dummy) {\n    //   this.rows.splice(0, 1, newRow);\n    // } else {\n    //   this.rows.splice(0, 0, newRow);\n    // }\n    for (let i in this.rows) {\n      if (this.rows[i].dummy) {\n        this.rows.splice(+i, 1, newRow);\n        break;\n      }\n    }\n  }\n\n  removeRow(index) {\n    let dummyRow = {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": true,\n      \"active\": false\n    };\n    if (this.rows.length < 6) {\n      this.rows.splice(index, 1, dummyRow);\n      this.rows.sort(this.compareFunction);\n    } else {\n      this.rows.splice(index, 1);\n    }\n  }\n\n  compareFunction(a, b) {\n    return a.dummy ? b : a;\n  }\n\n  noMedicalCondition(noMedicalConditionFlag) {\n    if (noMedicalConditionFlag) {\n      this.rows = this.dummyRows;\n    }\n  }\n\n  openDatepicker(id) {\n    this.dynamicId = id;\n    console.log(this.dynamicId);\n  }\n\n  closeFlag: boolean = false;\n  closeDatepicker(event) {\n    // if (!this.container.nativeElement.contains(event.target) && this.datePicker) { // check click origin\n    //   this.datePicker.close();\n    // }\n\n    // if(this._eref.nativeElement.querySelector('ngb-datepicker') && (!this._eref.nativeElement.querySelector('ngb-datepicker').contains(event.target)\n    // && !this._eref.nativeElement.querySelector('.input-group-addon').contains(event.target) && this.closeFlag)) {\n    //   let self = this;\n    //   setTimeout(function(){\n    //     self.dynamicId.close();\n    //     self.closeFlag = true;\n    //   },10);\n    // }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-panel {\\n    margin: auto;\\n    width: 40%;\\n}\\n\\n.error-message {\\n    padding-left: 20px;\\n    color: red;\\n}\\n\\nbutton:disabled {\\n  cursor: not-allowed;\\n  pointer-events: all !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"card-panel login-panel\\\">\\n        <form class=\\\"col s12\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n            <h4 class=\\\"center-align\\\">Login</h4>\\n            <!-- error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"errors?.summary\\\">\\n              <p class=\\\"error-message\\\">{{ errors.summary }}</p>\\n            </div>\\n            <!-- email -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"email\\\" \\n                          type=\\\"email\\\" \\n                          name=\\\"email\\\" \\n                          formControlName=\\\"email\\\"\\n                          required />\\n                    <label for='email'>Email</label>\\n                </div>\\n            </div>\\n            <!-- email error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"email.errors.required\\\">Email is required, please enter your email address.</p>\\n              <p class=\\\"error-message\\\" *ngIf=\\\"email.errors.pattern\\\">Not a valid email address, please enter another one.</p>\\n            </div>\\n            <!-- password -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"password\\\" \\n                          type=\\\"password\\\" \\n                          name=\\\"password\\\" \\n                          formControlName=\\\"password\\\"\\n                          required/>\\n                    <label for='password'>Password</label>\\n                </div>\\n            </div>\\n            <!-- password error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"password.errors.required\\\">Password is required, please enter your password.</p>\\n            </div>\\n            <!-- login button -->\\n            <div class=\\\"row right-align\\\">\\n                <button \\n                      type=\\\"submit\\\" \\n                      class=\\\"waves-effect waves-light btn indigo lighten-1\\\" \\n                      [disabled]=\\\"!loginForm.valid\\\">Log in</button>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <p class=\\\"right-align\\\"> New to HiChat?  <a [routerLink]=\\\"['/signup']\\\">Sign Up</a></p>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'app/services/auth.service';\nimport { User } from 'app/models/user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup\n  errors: any = {};\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\")\n      ]),\n      password: new FormControl(null, Validators.required)\n    });\n  }\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  onSubmit() {\n    const user = new User(\n      this.loginForm.value.email, \n      this.loginForm.value.password\n    );\n\n    this.authService.login(user)\n        .subscribe(response => {\n          console.log(response);\n            if (response.status === 200) {\n                this.authService.authenticateUser(response.token, this.loginForm.value.email);\n                this.router.navigate(['/home']);\n            } else {\n                console.log('Login failed');\n                console.log(response);\n            }\n        }, error => {\n          this.errors.summary = error.message;\n        });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".nav-wrapper {\\n    background-color: transparent;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">    \\n    <nav class=\\\"nav-bar indigo lighten-1\\\">\\n        <div class=\\\"nav-wrapper\\\">\\n          <div class=\\\"col s12\\\">\\n            <a href=\\\"/\\\" class=\\\"brand-logo\\\">HiChat</a>\\n            <ul id=\\\"nav-mobile\\\" class=\\\"right\\\">\\n              <div *ngIf=\\\"Auth.isUserAuthenticated(); else unAuthenticated\\\">\\n                  <li><input type=\\\"text\\\" placeholder=\\\"Search\\\"></li>\\n                  <li><a [routerLink]=\\\"['/profile']\\\">Profile</a></li>\\n                  <li>{{ Auth.getEmail() }}</li>  \\n                  <li><a [routerLink]=\\\"['/login']\\\" (click)=\\\"logout()\\\">Log out</a></li>\\n              </div>\\n                <!-- User is not login case  -->\\n              <ng-template #unAuthenticated>\\n                  <li><a [routerLink]=\\\"['/login']\\\">Log in</a></li>    \\n                  <li><a [routerLink]=\\\"['/signup']\\\">Sign up</a></li> \\n              </ng-template> \\n            </ul>\\n          </div>\\n        </div>\\n    </nav>\\n    <br/>\\n    \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'app/services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private Auth: AuthService) { }\n\n  ngOnInit() {\n    \n  }\n\n  logout() {\n    this.Auth.deauthenticate();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".styleBtn {\\n    padding: 1px 3px;\\n    font-size: 10px;\\n    height: 18px;\\n}\\n\\n.styleIcon {\\n    width: 10px;\\n    left: -1px;\\n    font-size: 12px;\\n    color: #008000;\\n}\\n\\n.checkbox {\\n    width: 10px;\\n    height: 10px;\\n}\\n\\n.fa.fa-check-square-o {\\n    width: 10px;\\n    height: 10px;\\n}\\n\\nbutton {\\n    border: 0px solid;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.css\n// module id = ../../../../../src/app/components/shared/checkbox/checkbox.component.css\n// module chunks = 1","module.exports = \"<div (click)=\\\"changeCheckbox()\\\">\\n    <label *ngIf=\\\"position === 'left'\\\">{{ label }}</label>\\n    <span \\n        class=\\\"fa mx-3\\\"\\n        [ngClass]=\\\"{'fa-check-square-o ': checked, 'fa-square-o': !checked, 'fa-lg': size === 'sm', 'fa-2x': size === 'md', 'fa-3x': size === 'lg'}\\\"\\n        aria-hidden=\\\"true\\\">\\n    </span>\\n    <label *ngIf=\\\"position === 'right'\\\" class=\\\"mr-3\\\">{{ label }}</label>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.html\n// module id = ../../../../../src/app/components/shared/checkbox/checkbox.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.css']\n})\nexport class CheckboxComponent implements OnInit {\n  private checked: boolean = false;\n\n  @Input() check: boolean;\n  @Input() label: string;\n  @Input() size: string;\n  @Input() position: string;\n  @Output() checkChange = new EventEmitter<boolean>();\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.label);\n  }\n\n  changeCheckbox() {\n      this.checked = !this.checked;\n      this.checkChange.emit(this.checked);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.ts","import {Directive, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public clickOutside = new EventEmitter<MouseEvent>();\n\n    @HostListener('document:click', ['$event', '$event.target'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        if (!targetElement) {\n            return;\n        }\n\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/clickOutside.directive.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-panel {\\n    margin: auto;\\n    width: 40%;\\n}\\n\\n.error-message {\\n    padding-left: 20px;\\n    color: red;\\n}\\n\\nbutton:disabled {\\n  cursor: not-allowed;\\n  pointer-events: all !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.css\n// module id = ../../../../../src/app/components/signup/signup.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"card-panel login-panel\\\">\\n        <form class=\\\"col s12\\\" [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <h4 class=\\\"center-align\\\">Sign up</h4>\\n            <!-- error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"errors?.summary\\\">\\n              <p class=\\\"error-message\\\">{{ errors.summary }}</p>\\n            </div>\\n            \\n            <!-- username -->\\n            <!-- <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"username\\\" \\n                          type=\\\"text\\\" \\n                          name=\\\"username\\\" \\n                          formControlName=\\\"username\\\" \\n                          required />\\n                    <label for='username'>Username</label>\\n                </div>\\n            </div> -->\\n            <!-- username error message -->\\n            <!-- <div class=\\\"row\\\" *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"username.errors.required\\\">Username is required, please enter your username.</p>\\n            </div> -->\\n\\n            <!-- email -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"email\\\" \\n                          type=\\\"email\\\" \\n                          name=\\\"email\\\" \\n                          formControlName=\\\"email\\\"\\n                          required />\\n                    <label for='email'>Email</label>\\n                </div>\\n            </div>\\n            <!-- email error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"email.errors.required\\\">Email is required, please enter your email address.</p>\\n              <p class=\\\"error-message\\\" *ngIf=\\\"email.errors.pattern\\\">Not a valid email address, please enter another one.</p>\\n            </div>\\n            <!-- password -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"password\\\" \\n                          type=\\\"password\\\" \\n                          name=\\\"password\\\" \\n                          formControlName=\\\"password\\\" />\\n                    <label for='password'>Password</label>\\n                </div>\\n            </div>\\n            <!-- password error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"password.errors.required\\\">Password is required, please enter your password.</p>\\n            </div> \\n            <!-- confirm password -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          id=\\\"confirm_password\\\" \\n                          type=\\\"password\\\" \\n                          name=\\\"confirm_password\\\" \\n                          class=\\\"validate\\\" \\n                          formControlName=\\\"confirm_password\\\" />\\n                    <label for=\\\"confirm_password\\\">Confirm Password</label>\\n                </div>\\n            </div>\\n            <!-- confirm_password error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"confirm_password.dirty || confirm_password.touched\\\">\\n                <p class=\\\"error-message\\\" *ngIf=\\\"confirm_password.errors?.required\\\">Confirm password is required, please enter your confirm password.</p>  \\n                <p class=\\\"error-message\\\" *ngIf=\\\"!confirm_password.errors && signupForm.hasError('mismatchedPasswords')\\\">Password not matched.</p>\\n            </div>\\n            <!-- signup button -->\\n            <div class=\\\"row right-align\\\">\\n                <button \\n                        type=\\\"submit\\\"\\n                        id=\\\"signupBtn\\\"\\n                        [disabled]=\\\"!signupForm.valid\\\"\\n                        class=\\\"waves-effect waves-light btn indigo lighten-1\\\">Sign up</button>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <p class=\\\"right-align\\\"> Already have an account?  <a [routerLink]=\\\"['/login']\\\">Login</a></p>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.html\n// module id = ../../../../../src/app/components/signup/signup.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'app/services/auth.service';\nimport { User } from 'app/models/user.model';\nimport { validateEqualValidator } from 'app/shared/equal-validator.directive';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n\n  constructor(\n    private authService: AuthService, \n    private fb: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\")\n      ]),\n      password: [null, Validators.required],\n      confirm_password: [null, Validators.required]\n    }, { validator: validateEqualValidator('password', 'confirm_password') });\n    \n  }\n\n  get email() {\n    return this.signupForm.get('email');\n  }\n\n  get password() {\n    return this.signupForm.get('password');\n  }\n\n  get confirm_password() {\n    return this.signupForm.get('confirm_password');\n  }\n\n  onSubmit() {\n    const userInfo = new User(\n      this.signupForm.value.email,\n      this.signupForm.value.password\n    );\n\n    this.authService.signup(userInfo)\n                  .subscribe(() => {\n                    this.router.navigateByUrl('/login');\n                  });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.ts","export class User {\n    constructor(public email: string,\n                public password: string) {}\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/models/user.model.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/toPromise';\n\nimport { ErrorService } from './error.service';\nimport { User } from '../models/user.model';\n\n@Injectable()\nexport class AuthService {\n\n    constructor(\n      private http: Http, \n      private errorService: ErrorService\n    ) { }\n\n    /**\n     * Register a user.\n     */\n    signup(user: User) {\n        const body = JSON.stringify(user);\n        const headers = new Headers({ \n            'Content-Type': 'application/json'\n        });\n        const options = new RequestOptions({ headers: headers });\n        return this.http.post('api/v1/auth/signup', body, options)\n                        .map((response: Response) => response.json());\n                        // .toPromise()\n                        // .then(function (res) {\n                        //     console.log('signup returned below');\n                        //     console.log(res);\n                        // })\n\n                        // .map((response: Response) => response.json())\n                        // .catch((error: Response) => {\n                        //     this.errorService.handleError(error.json());\n                        //     return Observable.throw(error.json());\n                        // });\n    }\n\n    /**\n     * User login\n     */\n    login(user: User) {\n        const body = JSON.stringify(user);\n        const headers = new Headers({\n            'Content-Type': 'application/json'\n        });\n        const options = new RequestOptions({ headers: headers });\n        return this.http.post('api/v1/auth/login', body, options)\n                        .map((response: Response) => { \n                            let res = response.json();\n                            res.status = response.status;\n                            return res;\n                        })\n                        .catch((error: Response) => {\n                            console.log('auth error');\n                            this.errorService.handleError(error.json())\n                            return Observable.throw(error.json());\n                        })\n                        // .toPromise()\n                        // .then(function (res) {\n                        //     return res.json();\n                        // })\n    }\n\n    /** \n     * Authenticate a user. Save a token string in localStorage.\n     */\n    authenticateUser(token, email) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('email', email);\n    } \n\n    /**\n     * Check if a user is authenticated.\n     */\n    isUserAuthenticated() {\n        return localStorage.getItem('token') !== null;\n    }\n\n    /**\n     * De-authenticate a user\n     */\n    deauthenticate() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('email');\n    }\n\n    /**\n     * Get token value\n     */\n    getToken() {\n        return localStorage.getItem('token');\n    }\n\n    /**\n     * Get email\n     */\n    getEmail() {\n        return localStorage.getItem('email');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/auth.service.ts","import { Injectable, EventEmitter } from '@angular/core';\nimport { Error } from '../Models/error.model';\n\n@Injectable()\nexport class ErrorService {\n\n  constructor() { }\n\n  errorOccurred = new EventEmitter<Error>();\n\n  handleError(error: any) {\n      console.log(error);\n      const errorData = new Error(error.success, error.message);\n      this.errorOccurred.emit(errorData);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/error.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport { AuthService } from './auth.service';\nimport { ErrorService } from './error.service';\nimport { User } from '../models/user.model';\n\n@Injectable()\nexport class UsersService {\n\n  constructor(private http: Http, private errorService: ErrorService) { }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/users.service.ts","import { FormControl, FormGroup } from '@angular/forms';\n\nexport function validateEqualValidator(password_key: string, confirm_password_key: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n    let password = group.controls[password_key];\n    let confirm_password = group.controls[confirm_password_key];\n\n    if (password.value !== confirm_password.value) {\n      return {        \n        mismatchedPasswords: true\n      };\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/shared/equal-validator.directive.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/main.ts"],"sourceRoot":"webpack:///"}