{"version":3,"sources":["/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src async","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/Models/error.model.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.module.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.routes.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/playground/playground.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/playground/playground.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/playground/playground.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/btn-group/btn-group.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/btn-group/btn-group.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/btn-group/btn-group.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/clickOutside.directive.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/date-picker.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/date-picker.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/date-picker.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/date-picker.validators.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/ngb-date-fr-parser-formatter.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/dbl-datepicker/dbl-datepicker.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/dbl-datepicker/dbl-datepicker.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/dbl-datepicker/dbl-datepicker.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/equal-validator.directive.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.css","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.html","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/models/user.model.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/auth.service.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/error.service.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/users.service.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/environments/environment.ts","/Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","export class Error {\n    constructor(public success: string, \n                public message: string) {}\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/Models/error.model.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'app/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private Auth: AuthService) {\n\n  }\n\n  ngOnInit() {\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// third party library\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n// import Components\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\n// import Services\nimport { AuthService } from './services/auth.service';\nimport { ErrorService } from './services/error.service';\nimport { UsersService } from './services/users.service';\n\n// import routing\nimport { routing } from 'app/app.routes';\nimport { HomeComponent } from './components/home/home.component';\n\n// import shared\nimport { BtnGroupComponent } from './components/shared/btn-group/btn-group.component';\nimport { CheckboxComponent } from './components/shared/checkbox/checkbox.component';\nimport { ClickOutsideDirective } from './components/shared/clickOutside.directive';\nimport { DatePickerComponent } from './components/shared/date-picker/date-picker.component';\nimport { PlaygroundComponent } from './components/playground/playground.component';\nimport { DblDatepickerComponent } from './components/shared/dbl-datepicker/dbl-datepicker.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NavbarComponent,\n    SignupComponent,\n    HomeComponent,\n    CheckboxComponent,\n    ClickOutsideDirective,\n    DatePickerComponent,\n    BtnGroupComponent,\n    PlaygroundComponent,\n    DblDatepickerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    NgbModule.forRoot(),\n    NgxDatatableModule,\n    routing\n  ],\n  providers: [\n    AuthService,\n    ErrorService,\n    UsersService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from 'app/app.component';\nimport { LoginComponent } from 'app/components/login/login.component';\nimport { SignupComponent } from 'app/components/signup/signup.component';\nimport { HomeComponent } from 'app/components/home/home.component';\nimport { PlaygroundComponent } from 'app/components/playground/playground.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: 'home',\n        component: HomeComponent\n    },\n    {\n        path: 'playground',\n        component: PlaygroundComponent\n    },\n    // {\n    //     path: 'profile/:userId',\n    //     component: ProfileComponent\n    // },\n    {\n        path: '**',\n        redirectTo: 'login'\n    }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/app.routes.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = 1","module.exports = \"<h1>Welcome to HiChat!!!</h1>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = 1","import { Component, OnInit, ViewChild, ElementRef, Inject } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { NgForm } from '@angular/forms';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DatepickerValidator } from '../shared/date-picker/date-picker.validators';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor(private el: ElementRef, private fb: FormBuilder) {\n    \n  }\n\n  ngOnInit() {\n    \n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-panel {\\n    margin: auto;\\n    width: 40%;\\n}\\n\\n.error-message {\\n    padding-left: 20px;\\n    color: red;\\n}\\n\\nbutton:disabled {\\n  cursor: not-allowed;\\n  pointer-events: all !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"card-panel login-panel\\\">\\n        <form class=\\\"col s12\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n            <h4 class=\\\"center-align\\\">Login</h4>\\n            <!-- error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"errors?.summary\\\">\\n              <p class=\\\"error-message\\\">{{ errors.summary }}</p>\\n            </div>\\n            <!-- email -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"email\\\" \\n                          type=\\\"email\\\" \\n                          name=\\\"email\\\" \\n                          formControlName=\\\"email\\\"\\n                          required />\\n                    <label for='email'>Email</label>\\n                </div>\\n            </div>\\n            <!-- email error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"email.errors.required\\\">Email is required, please enter your email address.</p>\\n              <p class=\\\"error-message\\\" *ngIf=\\\"email.errors.pattern\\\">Not a valid email address, please enter another one.</p>\\n            </div>\\n            <!-- password -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"password\\\" \\n                          type=\\\"password\\\" \\n                          name=\\\"password\\\" \\n                          formControlName=\\\"password\\\"\\n                          required/>\\n                    <label for='password'>Password</label>\\n                </div>\\n            </div>\\n            <!-- password error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"password.errors.required\\\">Password is required, please enter your password.</p>\\n            </div>\\n            <!-- login button -->\\n            <div class=\\\"row right-align\\\">\\n                <button \\n                      type=\\\"submit\\\" \\n                      class=\\\"waves-effect waves-light btn indigo lighten-1\\\" \\n                      [disabled]=\\\"!loginForm.valid\\\">Log in</button>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <p class=\\\"right-align\\\"> New to HiChat?  <a [routerLink]=\\\"['/signup']\\\">Sign Up</a></p>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'app/services/auth.service';\nimport { User } from 'app/models/user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup\n  errors: any = {};\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\")\n      ]),\n      password: new FormControl(null, Validators.required)\n    });\n  }\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  onSubmit() {\n    const user = new User(\n      this.loginForm.value.email, \n      this.loginForm.value.password\n    );\n\n    this.authService.login(user)\n        .subscribe(response => {\n          console.log(response);\n            if (response.status === 200) {\n                this.authService.authenticateUser(response.token, this.loginForm.value.email);\n                this.router.navigate(['/home']);\n            } else {\n                console.log('Login failed');\n                console.log(response);\n            }\n        }, error => {\n          this.errors.summary = error.message;\n        });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".nav-wrapper {\\n    background-color: transparent;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">    \\n    <nav class=\\\"nav-bar indigo lighten-1\\\">\\n        <div class=\\\"nav-wrapper\\\">\\n          <div class=\\\"col s12\\\">\\n            <a href=\\\"/\\\" class=\\\"brand-logo\\\">HiChat</a>\\n            <ul id=\\\"nav-mobile\\\" class=\\\"right\\\">\\n              <div *ngIf=\\\"Auth.isUserAuthenticated(); else unAuthenticated\\\">\\n                  <li><input type=\\\"text\\\" placeholder=\\\"Search\\\"></li>\\n                  <li><a [routerLink]=\\\"['/profile']\\\">Profile</a></li>\\n                  <li>{{ Auth.getEmail() }}</li>  \\n                  <li><a [routerLink]=\\\"['/login']\\\" (click)=\\\"logout()\\\">Log out</a></li>\\n              </div>\\n                <!-- User is not login case  -->\\n              <ng-template #unAuthenticated>\\n                  <li><a [routerLink]=\\\"['/login']\\\">Log in</a></li>    \\n                  <li><a [routerLink]=\\\"['/signup']\\\">Sign up</a></li> \\n              </ng-template> \\n            </ul>\\n          </div>\\n        </div>\\n    </nav>\\n    <br/>\\n    \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'app/services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private Auth: AuthService) { }\n\n  ngOnInit() {\n    \n  }\n\n  logout() {\n    this.Auth.deauthenticate();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tableCell-align {\\n  margin-top: 3.5px;\\n}\\ninput.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n.warning-block {\\n  color: #dc3545;\\n}\\n.activeRow {\\n  background-color: #f9ca07 !important;\\n}\\ntable.table-striped.table-bordered {\\n  overflow: auto;\\n}\\ntable.table-striped.table-bordered tr {\\n  height: 35px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/playground/playground.component.css\n// module id = ../../../../../src/app/components/playground/playground.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <form [formGroup]=\\\"ee1Form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <input \\n          type=\\\"text\\\" \\n          class=\\\"form-control\\\" \\n          placeholder=\\\"Search for user to chat\\\"\\n          name=\\\"searchUser\\\"\\n          [disabled]=\\\"ee1Form.get('testCheckbox').value\\\"\\n          formControlName=\\\"searchUser\\\"\\n          >\\n          <span \\n            class=\\\"warning-block\\\"\\n            *ngIf=\\\"!ee1Form.get('searchUser').valid && ee1Form.get('searchUser').touched\\\">Please enter a username</span>\\n     {{ee1Form.value|json}}\\n        <div class=\\\"card bg-light mt-3\\\">\\n            <div class=\\\"form-group ml-3 mt-3\\\">\\n                <label for=\\\"\\\">Datepicker</label>\\n                <date-picker \\n                  [(dates)]=\\\"testDate\\\" \\n                  [require]=\\\"true\\\" \\n                  [future]=\\\"false\\\"\\n                  formControlName=\\\"testDatepicker\\\">\\n                </date-picker>\\n            </div>  \\n        </div>\\n\\n        <div class=\\\"card bg-light mt-3\\\">\\n            <div class=\\\"form-group ml-3 mt-3\\\">\\n                <label for=\\\"\\\">Datepicker</label>\\n                <date-picker \\n                  [(dates)]=\\\"testDate2\\\" \\n                  [require]=\\\"true\\\" \\n                  [future]=\\\"false\\\"\\n                  formControlName=\\\"testDatepicker2\\\"\\n                  >\\n                </date-picker>\\n              </div>\\n        </div>\\n\\n\\n        <div class=\\\"card bg-light mt-3\\\">\\n            <div class=\\\"form-group mt-3\\\">\\n                <checkbox \\n                  [size]=\\\"'sm'\\\" \\n                  [label]=\\\"'No Medical Condition'\\\" \\n                  [position]=\\\"'right'\\\" \\n                  [(check)]=\\\"noMedicalConditionFlag\\\" \\n                  (checkChange)=\\\"noMedicalCondition(noMedicalConditionFlag)\\\"\\n                  formControlName=\\\"testCheckbox\\\">\\n                </checkbox>\\n            </div>\\n        </div>\\n        <div class=\\\"card bg-light mt-3\\\">\\n            <div class=\\\"form-group mt-3 ml-3\\\">\\n                <btn-radio \\n                  [btnItem]=\\\"address\\\" \\n                  [(selectedBtn)]=\\\"addressSelection\\\" \\n                  (selectedBtnChange)=\\\"addressChange($event)\\\"\\n                  formControlName=\\\"testBtnGroup\\\"></btn-radio>\\n            </div>\\n        </div>\\n\\n        <!-- Success -->\\n        <!-- <div class=\\\"card bg-light mt-3\\\">\\n            <div class=\\\"row form-group m-3\\\" formArrayName=\\\"conditions\\\" style=\\\"height: 500px; overflow: auto;\\\">\\n                <table class=\\\"table table-striped table-bordered\\\">\\n                  <thead>\\n                      <tr>\\n                          <th>Active</th>\\n                          <th>Condtion Type</th>\\n                          <th>Condition</th>\\n                          <th>Date Of Diagnosis</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor=\\\"let row of ee1Form.get('conditions').controls; let i = index;\\\" \\n                          (click)=\\\"selectRow(i)\\\" \\n                          [ngClass]=\\\"{ activeRow: ee1Form.get('conditions').controls[i].value.active }\\\"\\n                          >\\n                          <td>{{ row.value | json }}</td>\\n                          <td [formGroupName]=\\\"i\\\">\\n                              <select\\n                                  *ngIf=\\\"!row.value.dummy\\\"\\n                                  class=\\\"form-control tableCell-align\\\"\\n                                  formControlName=\\\"conditionType\\\">\\n                                <option value=\\\"\\\">Select Condition Type</option>\\n                                <option [ngValue]=\\\"row.conditionType\\\">{{ row.conditionType }}</option>\\n                              </select>\\n                          </td>\\n                          <td [formGroupName]=\\\"i\\\">\\n                              <input \\n                                  *ngIf=\\\"!row.value.dummy\\\"\\n                                  type=\\\"text\\\" \\n                                  class=\\\"form-control tableCell-align\\\"\\n                                  formControlName=\\\"condition\\\"\\n                                  name=\\\"condition\\\"\\n                              >\\n                          </td>\\n                          <td [formGroupName]=\\\"i\\\">\\n                            <date-picker\\n                              *ngIf=\\\"!row.value.dummy\\\"\\n                              formControlName=\\\"dateOfDiagnosis\\\"\\n                              [(dates)]=\\\"row.dateOfDiagnosis\\\" \\n                              [require]=\\\"'false'\\\" \\n                              [future]=\\\"true\\\"\\n                              [customClass]=\\\"'dpFullWidth'\\\"\\n                              style=\\\"width: 100%;\\\"\\n                            ></date-picker>\\n                          </td>\\n                      </tr>\\n                  </tbody>\\n                </table>\\n            </div>\\n            <div class=\\\"row form-group mx-0\\\">\\n                <div class=\\\"col-md-3 mt-2\\\">\\n                  <checkbox [size]=\\\"'sm'\\\" [label]=\\\"'No Medical Condition'\\\" [position]=\\\"'right'\\\" [(check)]=\\\"noMedicalConditionFlag\\\" (checkChange)=\\\"noMedicalCondition(noMedicalConditionFlag)\\\"></checkbox>\\n                </div>\\n                <div class=\\\"col-md-4 offset-md-5\\\">\\n                  <button \\n                    class=\\\"btn btn-primary\\\" \\n                    (click)=\\\"addRow()\\\" \\n                    type=\\\"button\\\">\\n                    Add Condition\\n                  </button>\\n                  <button \\n                    class=\\\"btn btn-secondary\\\" \\n                    (click)=\\\"removeRow()\\\" \\n                    type=\\\"button\\\">\\n                    Remove Condition\\n                  </button>\\n                </div>\\n            </div>\\n        </div> -->\\n{{ ee1Form.value | json }}\\n        <dbl-datepicker \\n            formControlName=\\\"testDblDatepicker\\\"\\n            [test1]=\\\"ee1Form.get('testDblDatepicker').value.value\\\"\\n            ></dbl-datepicker> \\n        \\n\\n        <div class=\\\"card bg-light mt-3\\\">\\n            <div class=\\\"row form-group\\\">\\n              <div class=\\\"col-md-3 ml-auto mt-3\\\">\\n                  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Submit Form</button>\\n                  <button class=\\\"btn btn-default\\\" type=\\\"reset\\\">reset</button>\\n              </div>\\n            </div>\\n        </div>\\n    </form>  \\n\\n   \\n    <!-- To be continue -->\\n        <div class=\\\"card bg-light mt-3\\\">\\n            <h3>Diagnosed Condition</h3>\\n            {{ rows | json }}\\n            <div class=\\\"mb-3 mt-3\\\" style=\\\"z-index: 1;\\\">\\n                <ngx-datatable\\n                    #mydatatable\\n                    class=\\\"bootstrap\\\"\\n                    (select)=\\\"onSelect($event)\\\"\\n                    [selectionType]=\\\"'single'\\\"\\n                    [selectCheck]=\\\"checkSelectedRow\\\"\\n                    [selected]=\\\"selected\\\"\\n                    [columnMode]=\\\"'force'\\\"\\n                    [rowClass]=\\\"getRowClass\\\"\\n                    [rowHeight]=\\\"35\\\"\\n                    [rows]=\\\"ee1Form.get('conditions').controls\\\"\\n                    [messages]=\\\"{'emptyMessage': 'Please add conditions'}\\\"\\n                >\\n                <ngx-datatable-column name=\\\"Condition Type\\\">\\n                  <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-value=\\\"value\\\" let-row=\\\"row\\\">\\n                    <select\\n                        *ngIf=\\\"!row.dummy\\\"\\n                        name=\\\"conditionType\\\"\\n                        [(ngModel)]=\\\"row.conditionType\\\"\\n                        class=\\\"form-control tableCell-align\\\">\\n                      <option value=\\\"\\\">Select Condition Type</option>\\n                      <option [ngValue]=\\\"row.conditionType\\\">{{ row.conditionType }}</option>\\n                    </select>\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Condition\\\">\\n                  <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                    <input \\n                        *ngIf=\\\"!row.dummy\\\"\\n                        type=\\\"text\\\" \\n                        class=\\\"form-control tableCell-align\\\"\\n                        [(ngModel)]=\\\"condition\\\"\\n                        name=\\\"condition\\\"\\n                        >\\n                  </ng-template>\\n                </ngx-datatable-column>\\n                <ngx-datatable-column name=\\\"Date of Diagnosis\\\">\\n                  <ng-template ngx-datatable-cell-template let-rowIndex=\\\"rowIndex\\\" let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                      <div class=\\\"form-inline\\\" *ngIf=\\\"!row.dummy\\\">\\n                          <date-picker \\n                              [(dates)]=\\\"row.dateOfDiagnosis\\\" \\n                              [require]=\\\"'false'\\\" \\n                              [future]=\\\"true\\\"\\n                              [customClass]=\\\"'dpFullWidth'\\\"\\n                              class=\\\"tableCell-align\\\"\\n                              style=\\\"width: 100%;\\\"\\n                              ></date-picker>\\n                      </div>\\n                  </ng-template>\\n                </ngx-datatable-column>\\n              </ngx-datatable>\\n            </div>\\n            <div class=\\\"row form-group mx-0\\\">\\n                <div class=\\\"col-md-3 mt-2\\\">\\n                  <checkbox [size]=\\\"'sm'\\\" [label]=\\\"'No Medical Condition'\\\" [position]=\\\"'right'\\\" [(check)]=\\\"noMedicalConditionFlag\\\" (checkChange)=\\\"noMedicalCondition(noMedicalConditionFlag)\\\"></checkbox>\\n                </div>\\n                <div class=\\\"col-md-4 offset-md-5\\\">\\n                  <button \\n                    class=\\\"btn btn-primary\\\" \\n                    (click)=\\\"addRow()\\\" \\n                    type=\\\"button\\\">\\n                    Add Condition\\n                  </button>\\n                  <button \\n                    class=\\\"btn btn-secondary\\\" \\n                    (click)=\\\"removeRow()\\\" \\n                    type=\\\"button\\\">\\n                    Remove Condition\\n                  </button>\\n                </div>\\n            </div>\\n        </div>\\n\\n   \\n\\n    <div class=\\\"card bg-light mt-3\\\">\\n      <div class=\\\"row form-group\\\">\\n        <div class=\\\"col-md-2 ml-auto mt-3\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!ee1Form.valid\\\" (click)=\\\"submitForm()\\\">Submit</button>\\n            <button class=\\\"btn btn-default\\\" type=\\\"reset\\\">reset</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <pre>{{ ee1Form.value | json }}</pre>\\n</div>\\n  \\n\\n    \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/playground/playground.component.html\n// module id = ../../../../../src/app/components/playground/playground.component.html\n// module chunks = 1","import { Component, OnInit, ViewChild, ElementRef, Inject } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { NgForm } from '@angular/forms';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DatepickerValidator } from '../shared/date-picker/date-picker.validators';\n\n@Component({\n  selector: 'app-playground',\n  templateUrl: './playground.component.html',\n  styleUrls: ['./playground.component.css']\n})\nexport class PlaygroundComponent implements OnInit {\n  @ViewChild('container') container;\n  @ViewChild('input[ngbDatepicker]') datePicker;\n  ee1Form: FormGroup;\n\n  dynamicId;\n  testDate;\n  address = [\n    { name: \"Domestic\", value: \"domestic\" },\n    { name: \"Foreign\", value: \"foreign\" }\n  ];\n  addressSelection;\n  \n  noMedicalConditionFlag: boolean = false;\n  rowsFormArray: FormArray;\n  rows = [];\n  dummyRows;\n\n  selected = [];\n\n  tableFixedRowSize: number = 6\n\n  constructor(private el: ElementRef, private fb: FormBuilder) {\n    this.dummyRows = this.rows;\n  }\n\n  ngOnInit() {\n    this.addressSelection = this.address[0].value;\n    // this.initConditions();\n    this.ee1Form = this.fb.group({\n      'searchUser': ['Neal', Validators.required],\n      'testDatepicker': [null, DatepickerValidator(true, new Date())],\n      'testDatepicker2': [null, DatepickerValidator(true, new Date())],\n      'testCheckbox': [null, null],\n      'testBtnGroup': [this.address[0].value, false],\n      'testDblDatepicker': [{ value: { test1: 'test1', 'disabled': true }}],\n      'conditions': this.fb.array([])\n    });\n    this.initConditions();\n  }\n\n  initConditions() {\n    let defaultCondition = {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": true,\n      \"active\": false,\n      \"index\": 0\n    };\n    let newCondition;\n    let conditionFormGroup;\n    for (let i = 0; i < this.tableFixedRowSize; i++) {\n      newCondition = { ...defaultCondition };\n      newCondition.index = i;\n      conditionFormGroup = this.fb.group({\n        \"conditionType\": [null],\n        \"condition\": [null],\n        \"dateOfDiagnosis\": [null],\n        \"dummy\": [true],\n        \"active\": [false],\n        \"index\": [i]\n      });\n      this.rows.push(newCondition);\n      (<FormArray>this.ee1Form.get('conditions')).push(conditionFormGroup);\n    }\n  }\n\n  getCellClass({ row, column, value }): any {\n    return {\n      'table-cell': true\n    }\n  }\n\n  getRowClass(row) {\n    return {\n      'activeRowClass': row.active\n    }\n  }\n\n  checkSelectedRow(row, column, value) {\n    console.log(row);\n    return !row.dummy\n  }\n\n  prevSelected;\n  onSelect({ selected }) {\n    // console.log('Select Event', selected, this.selected);\n    if (selected && selected[0] && !selected[0].dummy) {\n      if (this.prevSelected) {\n        this.prevSelected[0].active = false;\n      }\n      \n      selected[0].active = true;\n      this.prevSelected = selected;\n    }\n  }\n\n  prevSelectedIndex;\n  selectRow(index) {\n    console.log(this.prevSelectedIndex);\n    if (this.prevSelectedIndex !== undefined) {\n      (<FormArray>this.ee1Form.get('conditions')).controls[this.prevSelectedIndex].value.active = false;\n    } \n    (<FormArray>this.ee1Form.get('conditions')).controls[index].value.active = true;\n    this.prevSelectedIndex = index;\n  }\n\n  addRow() {\n    const newRow = {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": false,\n      \"active\": true,\n      \"index\": 0\n    };\n    \n    const newSelectedObj: any = {\n      selected: {\n        \"0\": newRow\n      }\n    };\n\n    let conditionFormGroup;\n    \n    let i = 0;\n    for (; i < this.rows.length; i++) {\n      if ((<FormArray>this.ee1Form.get('conditions')).controls[i].value.active) {\n        (<FormArray>this.ee1Form.get('conditions')).controls[i].value.active = false;\n      }\n      if (this.rows[i].dummy) {\n        // update the index\n        newRow.index = i;\n        // const newRowControl = this.fb.control(newRow);\n        conditionFormGroup = this.fb.group({\n          \"conditionType\": [null],\n          \"condition\": [null],\n          \"dateOfDiagnosis\": [null],\n          \"dummy\": [false],\n          \"active\": [true],\n          \"index\": [i]\n        });\n        // remove old row and add newRow to rows\n        this.rows.splice(i, 1, newRow);\n        \n        // setControl replace an existing control\n        (<FormArray>this.ee1Form.get('conditions')).setControl(i, conditionFormGroup); \n        // this.checkSelectedRow(newRow, null, null);\n        this.onSelect(newSelectedObj);\n        break;\n      }\n    }\n\n    if (i === this.rows.length) {\n      newRow.index = i;\n      this.rows.push(newRow);\n      conditionFormGroup = this.fb.group({\n        \"conditionType\": [null],\n        \"condition\": [null],\n        \"dateOfDiagnosis\": [null],\n        \"dummy\": [false],\n        \"active\": [true],\n        \"index\": [i]\n      });\n      (<FormArray>this.ee1Form.get('conditions')).push(conditionFormGroup);\n      this.onSelect(newSelectedObj);\n    }\n  }\n\n  removeRow() {\n    let dummyRow = {\n      \"conditionType\": \"\",\n      \"condition\": \"\",\n      \"dateOfDiagnosis\": \"\",\n      \"dummy\": true,\n      \"active\": false,\n      \"index\": this.rows.length\n    };\n\n    const removeIndex = this.selected[0].index;\n    if (this.rows.length > this.tableFixedRowSize) {\n      this.rows.splice(removeIndex, 1);\n      (<FormArray>this.ee1Form.get('conditions')).removeAt(removeIndex);\n    } else {\n      this.rows.splice(removeIndex, 1);\n      (<FormArray>this.ee1Form.get('conditions')).removeAt(removeIndex)\n      this.rows.push(dummyRow);\n      (<FormArray>this.ee1Form.get('conditions')).push(this.fb.control(dummyRow));\n    }\n\n    // update subsequent index\n    for (let i = removeIndex; i < this.rows.length; i++) {\n      this.rows[i].index--;\n      (<FormArray>this.ee1Form.get('conditions')).setControl(i, this.fb.control(this.rows[i]));\n    }\n  }\n\n  compareFunction(a, b) {\n    return a.dummy ? b : a;\n  }\n\n  noMedicalCondition(noMedicalConditionFlag) {\n    if (noMedicalConditionFlag) {\n      this.rows = this.dummyRows;\n    }\n  }\n\n  addressChange() {\n\n  }\n\n  submitForm() {\n    console.log(this.ee1Form);\n  }\n\n  onSubmit() {\n    console.log(this.ee1Form);\n  }\n  // openDatepicker(id) {\n  //   this.dynamicId = id;\n  //   console.log(this.dynamicId);\n  // }\n\n  // closeFlag: boolean = false;\n  // closeDatepicker(event) {\n  //   // if (!this.container.nativeElement.contains(event.target) && this.datePicker) { // check click origin\n  //   //   this.datePicker.close();\n  //   // }\n\n  //   // if(this._eref.nativeElement.querySelector('ngb-datepicker') && (!this._eref.nativeElement.querySelector('ngb-datepicker').contains(event.target)\n  //   // && !this._eref.nativeElement.querySelector('.input-group-addon').contains(event.target) && this.closeFlag)) {\n  //   //   let self = this;\n  //   //   setTimeout(function(){\n  //   //     self.dynamicId.close();\n  //   //     self.closeFlag = true;\n  //   //   },10);\n  //   // }\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/playground/playground.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-default {\\r\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\r\\n  font-size: 12px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n.active {\\r\\n  background-color: #449d44;\\r\\n  color: #ffffff;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/btn-group/btn-group.component.css\n// module id = ../../../../../src/app/components/shared/btn-group/btn-group.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"btn-group\\\" ngbRadioGroup name=\\\"radioBasic\\\" [(ngModel)]=\\\"selectedBtn\\\" (ngModelChange)=\\\"change($event)\\\">\\r\\n    <label class=\\\"btn-default px-2\\\" ngbButtonLabel *ngFor=\\\"let btn of btnItem\\\">\\r\\n    <input type=\\\"radio\\\" ngbButton [value]=\\\"btn.value\\\"> {{btn.name}}\\r\\n  </label>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/btn-group/btn-group.component.html\n// module id = ../../../../../src/app/components/shared/btn-group/btn-group.component.html\n// module chunks = 1","import { Component, OnInit, Input,Output ,EventEmitter, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'btn-radio',\r\n  templateUrl: './btn-group.component.html',\r\n  styleUrls: ['./btn-group.component.css'],\r\n  providers: [\r\n    { \r\n      provide: NG_VALUE_ACCESSOR, \r\n      useExisting: forwardRef(() => BtnGroupComponent), \r\n      multi: true \r\n    }\r\n  ]\r\n})\r\nexport class BtnGroupComponent implements OnInit, ControlValueAccessor {\r\n  @Input()  btnItem: Object;\r\n  @Input()  selectedBtn: String;\r\n  @Input()  type:string;\r\n  @Output() selectedBtnChange = new EventEmitter<String>(); \r\n \r\n  constructor() { \r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n  \r\n  }\r\n\r\n  change(newValue:String) {\r\n    this.selectedBtn = newValue;\r\n    this.selectedBtnChange.emit(newValue);\r\n    this.propagateChange(newValue);\r\n  }\r\n\r\n  /** Implement ControlValueAccessor method below */\r\n  propagateChange = (_: any) => {};\r\n  /** writeValue(obj: any) is the method that writes a new value from the form model into the view or (if needed) DOM property. */\r\n  writeValue(value: any) {\r\n    if (value !== undefined) {\r\n      this.selectedBtn = value;\r\n    }\r\n  }\r\n\r\n  /** \r\n   * registerOnChange(fn: any) is a method that registers a handler that should be called when something in the view has changed. \r\n   * It gets a function that tells other form directives and form controls to update their values. \r\n   * registerOnChange() has access to a function that informs the outside world about changes. \r\n   * Here’s where we can do special work, whenever we propagate the change, if we wanted to. \r\n   */\r\n  registerOnChange(fn) {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  /** \r\n   * registerOnTouched(fn: any) Similiar to registerOnChange(), this registers a handler specifically for when a control receives \r\n   * a touch event.\r\n   * */\r\n  registerOnTouched(fn) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/btn-group/btn-group.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".styleBtn {\\n    padding: 1px 3px;\\n    font-size: 10px;\\n    height: 18px;\\n}\\n\\n.styleIcon {\\n    width: 10px;\\n    left: -1px;\\n    font-size: 12px;\\n    color: #008000;\\n}\\n\\n.checkbox {\\n    width: 10px;\\n    height: 10px;\\n}\\n\\n.fa.fa-check-square-o {\\n    width: 10px;\\n    height: 10px;\\n}\\n\\nbutton {\\n    border: 0px solid;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.css\n// module id = ../../../../../src/app/components/shared/checkbox/checkbox.component.css\n// module chunks = 1","module.exports = \"<div (click)=\\\"changeCheckbox($event)\\\">\\n    <label *ngIf=\\\"position === 'left'\\\">{{ label }}</label>\\n    <span \\n        class=\\\"fa mx-3\\\"\\n        [ngClass]=\\\"{'fa-check-square-o ': checked, 'fa-square-o': !checked, 'fa-lg': size === 'sm', 'fa-2x': size === 'md', 'fa-3x': size === 'lg'}\\\"\\n        aria-hidden=\\\"true\\\">\\n    </span>\\n    <label *ngIf=\\\"position === 'right'\\\" class=\\\"mr-3\\\">{{ label }}</label>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.html\n// module id = ../../../../../src/app/components/shared/checkbox/checkbox.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.css'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR, \n      useExisting: forwardRef(() => CheckboxComponent), \n      multi: true \n    }\n  ]\n})\nexport class CheckboxComponent implements OnInit, ControlValueAccessor {\n  private checked: boolean = false;\n\n  @Input() check: boolean;\n  @Input() label: string;\n  @Input() size: string;\n  @Input() position: string;\n  @Output() checkChange = new EventEmitter<boolean>();\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n  changeCheckbox() {\n      this.checked = !this.checked;\n      this.checkChange.emit(this.checked);\n      this.propagateChange(this.checked);\n  }\n\n\n  /** Implement ControlValueAccessor method below */\n  propagateChange = (_: any) => {};\n  /** writeValue(obj: any) is the method that writes a new value from the form model into the view or (if needed) DOM property. */\n  writeValue(value: any) {\n    if (value !== undefined) {\n      this.checked = value;\n    }\n  }\n\n  /** \n   * registerOnChange(fn: any) is a method that registers a handler that should be called when something in the view has changed. \n   * It gets a function that tells other form directives and form controls to update their values. \n   * registerOnChange() has access to a function that informs the outside world about changes. \n   * Here’s where we can do special work, whenever we propagate the change, if we wanted to. \n   */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** \n   * registerOnTouched(fn: any) Similiar to registerOnChange(), this registers a handler specifically for when a control receives \n   * a touch event.\n   * */\n  registerOnTouched(fn) {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/checkbox/checkbox.component.ts","import {Directive, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n    constructor(private _elementRef: ElementRef) {\n    }\n\n    @Output()\n    public clickOutside = new EventEmitter<MouseEvent>();\n\n    @HostListener('document:click', ['$event', '$event.target'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        if (!targetElement) {\n            return;\n        }\n\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/clickOutside.directive.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-default {\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n.form-control-feedback {\\n  color: #dc3545;\\n}\\nbutton.input-group-addon {\\n  padding: 1px 6px;\\n}\\n.invalidDp input.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\\n.invalidDp button.input-group-addon {\\n  border-right: 1px solid red;\\n  border-top: 1px solid red;\\n  border-bottom: 1px solid red;\\n}\\n.dpFullWidth div.input-group {\\n  width: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/date-picker.component.css\n// module id = ../../../../../src/app/components/shared/date-picker/date-picker.component.css\n// module chunks = 1","module.exports = \"<form class=\\\"form-inline\\\" #dpFormRef=\\\"ngForm\\\" [ngClass]=\\\"customClass\\\">\\r\\n    <div class=\\\"input-group\\\" [ngClass]=\\\"{ invalidDp: dp.invalid && dp.touched }\\\">\\r\\n        <input \\r\\n            class=\\\"form-control\\\" \\r\\n            placeholder=\\\"mm/dd/yyyy\\\"\\r\\n            name=\\\"dp\\\" id=\\\"dp\\\" #dp=\\\"ngModel\\\" \\r\\n            [required]=\\\"require\\\"\\r\\n            [maxDate]=\\\"maxDate\\\" \\r\\n            [(ngModel)]=\\\"dates\\\" \\r\\n            ngbDatepicker \\r\\n            #d=\\\"ngbDatepicker\\\"  \\r\\n            (ngModelChange)=\\\"onDateChanged($event)\\\"\\r\\n        >\\r\\n        <button class=\\\"input-group-addon\\\" type=\\\"button\\\" (click)=\\\"d.toggle()\\\">\\r\\n            <i class=\\\"fa fa-calendar\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\"></i>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"dp.invalid && dp.touched\\\"\\r\\n        class=\\\"p-1\\\">\\r\\n        {{ dp.errors | json }}\\r\\n        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"dp.errors.required\\\">\\r\\n            Date is required.\\r\\n        </div>\\r\\n        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"dp.errors.ngbDate && dp.errors.ngbDate.invalid\\\">\\r\\n            format is not correct.\\r\\n        </div>\\r\\n        <div class=\\\"form-control-feedback\\\" *ngIf=\\\"dp.errors.ngbDate && dp.errors.ngbDate.requiredAfter\\\">\\r\\n            Future date is not allowed\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n      \\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/date-picker.component.html\n// module id = ../../../../../src/app/components/shared/date-picker/date-picker.component.html\n// module chunks = 1","import { Component, OnInit, Input, Output ,EventEmitter, ViewChild, forwardRef, OnChanges } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormControl } from '@angular/forms';\r\nimport { NgbDatepickerConfig, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbDateFRParserFormatter } from \"./ngb-date-fr-parser-formatter\";\r\nimport { DatepickerValidator } from './date-picker.validators';\r\n\r\n@Component({\r\n    selector: 'date-picker',\r\n    templateUrl: './date-picker.component.html',\r\n    styleUrls: ['./date-picker.component.css'],\r\n    providers: [\r\n      { \r\n        provide: NgbDateParserFormatter, \r\n        useClass: NgbDateFRParserFormatter \r\n      },\r\n      { \r\n        provide: NG_VALUE_ACCESSOR, \r\n        useExisting: forwardRef(() => DatePickerComponent), \r\n        multi: true \r\n      }\r\n    ]\r\n})\r\nexport class DatePickerComponent implements OnInit, OnChanges, ControlValueAccessor {\r\n    @Input() public customClass;\r\n    @Input() public dates;\r\n    @Input() public require;\r\n    @Input () public future;\r\n    @Output() datesChange = new EventEmitter<String>();\r\n    @ViewChild('dp') dp;\r\n    public currentDate:Date = new Date();\r\n    public maxDate:Object;\r\n    public pattern:RegExp = /^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$/;\r\n    public validateFn: Function;\r\n  \r\n    constructor() {\r\n\r\n    }\r\n\r\n    changeFormat(item:any){\r\n      const selectDate = new Date(item);\r\n      item ={\r\n        year:selectDate.getFullYear(), \r\n        month:selectDate.getMonth()+1, \r\n        day:selectDate.getDate()\r\n      };\r\n      \r\n      return item;\r\n\r\n    }\r\n\r\n    ngOnInit() { \r\n      // this.maxDate = this.future?\"-\":{year:this.currentDate.getFullYear(), month:this.currentDate.getMonth()+1, day:this.currentDate.getDate()};\r\n      // DatepickerValidator(this.maxDate);\r\n    }\r\n\r\n    ngOnChanges(changes) {\r\n      this.maxDate = this.future?\"-\":{year:this.currentDate.getFullYear(), month:this.currentDate.getMonth()+1, day:this.currentDate.getDate()};\r\n      this.validateFn = DatepickerValidator(this.require, this.maxDate);\r\n    }\r\n\r\n    validate(c: FormControl) {\r\n      return this.validateFn(c);\r\n    }\r\n\r\n    onDateChanged(event): void {\r\n      // structure like { year: 2017, month: 11, day: 10 }\r\n      if (this.pattern.test(event)){\r\n          const selectDate = new Date(event);\r\n          event = {\r\n            year:selectDate.getFullYear(), \r\n            month:selectDate.getMonth()+1, \r\n            day:selectDate.getDate()\r\n          };\r\n      }\r\n    \r\n      this.datesChange.emit(event);\r\n      this.propagateChange(event);\r\n    }\r\n\r\n\r\n    /** Implement ControlValueAccessor method below */\r\n    propagateChange = (_: any) => {};\r\n    /** writeValue(obj: any) is the method that writes a new value from the form model into the view or (if needed) DOM property. */\r\n    writeValue(value: any) {\r\n      if (value !== undefined) {\r\n        this.dates = value;\r\n      }\r\n    }\r\n\r\n    /** \r\n     * registerOnChange(fn: any) is a method that registers a handler that should be called when something in the view has changed. \r\n     * It gets a function that tells other form directives and form controls to update their values. \r\n     * registerOnChange() has access to a function that informs the outside world about changes. \r\n     * Here’s where we can do special work, whenever we propagate the change, if we wanted to. \r\n     */\r\n    registerOnChange(fn) {\r\n      this.propagateChange = fn;\r\n    }\r\n\r\n    /** \r\n     * registerOnTouched(fn: any) Similiar to registerOnChange(), this registers a handler specifically for when a control receives \r\n     * a touch event.\r\n     * */\r\n    registerOnTouched(fn) {\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/date-picker.component.ts","import { FormControl } from '@angular/forms';\n\nfunction changeFormat(date: any) {\n    // date comes in strcture like { year: 2017, month: 8, day: 8 }\n    const copyOfOriginalDt = { ...date };\n    if (date) {\n        copyOfOriginalDt.month = date.month < 10 ? '0' + date.month : date.month;\n        copyOfOriginalDt.day = date.day < 10 ? '0' + date.day : date.day;\n        copyOfOriginalDt.year = date.year\n        const formatedDate = `${copyOfOriginalDt.month}/${copyOfOriginalDt.day}/${copyOfOriginalDt.year}`;\n        return formatedDate;\n    }\n}\n\nfunction checkDateRange(selectedDate, maxDate) {\n    if (maxDate instanceof Date) {\n        // convert maxDate to the following structure\n        maxDate = {\n            year: maxDate.getFullYear(), \n            month: maxDate.getMonth() + 1, \n            day: maxDate.getDate()\n        }\n    }\n    // Initialize MaxDt and SelectedDt\n    // According to the specification, the maximum date is new Date(8640000000000000) (Sat, 13 Sep 275760 00:00:00 GMT)\n    let MaxDt: Date = new Date(8640000000000000), SelectedDt: Date = new Date();\n    if (selectedDate && maxDate && maxDate.year && maxDate.month && maxDate.day) {\n        MaxDt = new Date(maxDate.year, maxDate.month - 1, maxDate.day);\n        SelectedDt = new Date(selectedDate.year, selectedDate.month - 1, selectedDate.day);\n    }\n    console.log(MaxDt);\n    console.log(SelectedDt);\n    return SelectedDt <= MaxDt;\n}\n\nconst pattern = /^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[- /.](19|20)\\d\\d$/;\nexport function DatepickerValidator(require?: any, maxDate?: any) {\n    return function validateDatepicker(c: FormControl) {\n        // console.log('validator');\n        // console.log(require);\n        // console.log(maxDate);\n        // console.log(c.value);\n        // console.log(changeFormat(c.value));\n        // console.log(pattern.test(changeFormat(c.value)));\n        // console.log('-------');\n        let err = {\n          datepickerErrMsg: {\n            given: c.value,\n            required: c.value == null ? 'Datepicker is required': null,\n            format: !pattern.test(changeFormat(c.value)) ? 'Format is incorrect' : null,\n            futureDate: !checkDateRange(c.value, maxDate) ? 'Cannot enter a future date' : null\n          } \n        };\n        // required && valid format && valid date range\n        const result = c.value !== null && pattern.test(changeFormat(c.value)) && checkDateRange(c.value, maxDate) ? null : err; \n        // console.log('result', result);\n        return require ? result : null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/date-picker.validators.ts","import { Injectable } from \"@angular/core\";\r\nimport { NgbDateParserFormatter, NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nfunction padNumber(value: number) {\r\n    if (isNumber(value)) {\r\n        return `0${value}`.slice(-2);\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction isNumber(value: any): boolean {\r\n    return !isNaN(toInteger(value));\r\n}\r\n\r\nfunction toInteger(value: any): number {\r\n    return parseInt(`${value}`, 10);\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class NgbDateFRParserFormatter extends NgbDateParserFormatter {\r\n    parse(value: string): NgbDateStruct {\r\n        if (value) {\r\n            const dateParts = value.trim().split('/');\r\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\r\n                return {year: toInteger(dateParts[0]), month: null, day: null};\r\n            } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\r\n                return {year: toInteger(dateParts[1]), month: toInteger(dateParts[0]), day: null};\r\n            } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\r\n                return {year: toInteger(dateParts[2]), month: toInteger(dateParts[0]), day: toInteger(dateParts[1])};\r\n            }\r\n        }   \r\n        return null;\r\n    }\r\n\r\n    format(date: NgbDateStruct): string {\r\n        let stringDate: string = \"\"; \r\n        if(date) {\r\n            stringDate += isNumber(date.month) ? padNumber(date.month) + \"/\" : \"\";\r\n            stringDate += isNumber(date.day) ? padNumber(date.day) + \"/\" : \"\";\r\n            stringDate += date.year;\r\n        }\r\n        return stringDate;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/date-picker/ngb-date-fr-parser-formatter.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/dbl-datepicker/dbl-datepicker.component.css\n// module id = ../../../../../src/app/components/shared/dbl-datepicker/dbl-datepicker.component.css\n// module chunks = 1","module.exports = \"<input type=\\\"text\\\" [(ngModel)]=\\\"test1.test1\\\" class=\\\"form-control\\\">\\n<input type=\\\"text\\\" [(ngModel)]=\\\"test1.test1\\\" class=\\\"form-control\\\">\\n<input type=\\\"text\\\" [(ngModel)]=\\\"test1.test1\\\" class=\\\"form-control\\\">\\n{{ test1 | json }}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/dbl-datepicker/dbl-datepicker.component.html\n// module id = ../../../../../src/app/components/shared/dbl-datepicker/dbl-datepicker.component.html\n// module chunks = 1","import { Component, OnInit, Input,forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, FormControl, FormGroup } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms/src/form_builder';\n\n@Component({\n  selector: 'dbl-datepicker',\n  templateUrl: './dbl-datepicker.component.html',\n  styleUrls: ['./dbl-datepicker.component.css'],\n  providers: [\n    { \n      provide: NG_VALUE_ACCESSOR, \n      useExisting: forwardRef(() => DblDatepickerComponent), \n      multi: true \n    }\n  ]\n})\nexport class DblDatepickerComponent implements OnInit, ControlValueAccessor {\n  @Input() test1;\n  @Input() test2;\n  @Input() test3;\n  @Input() test4;\n  constructor() {\n    \n  }\n\n  ngOnInit() {\n  }\n\n  test1Change(event) {\n    console.log(event);\n    this.propagateChange(event);\n  }\n\n  /** Implement ControlValueAccessor method below */\n  propagateChange = (_: any) => {};\n  /** writeValue(obj: any) is the method that writes a new value from the form model into the view or (if needed) DOM property. */\n  writeValue(value: any) {\n    console.log(value);\n  }\n\n  /** \n   * registerOnChange(fn: any) is a method that registers a handler that should be called when something in the view has changed. \n   * It gets a function that tells other form directives and form controls to update their values. \n   * registerOnChange() has access to a function that informs the outside world about changes. \n   * Here’s where we can do special work, whenever we propagate the change, if we wanted to. \n   */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** \n   * registerOnTouched(fn: any) Similiar to registerOnChange(), this registers a handler specifically for when a control receives \n   * a touch event.\n   * */\n  registerOnTouched(fn) {\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/dbl-datepicker/dbl-datepicker.component.ts","import { FormControl, FormGroup } from '@angular/forms';\n\nexport function validateEqualValidator(password_key: string, confirm_password_key: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n    let password = group.controls[password_key];\n    let confirm_password = group.controls[confirm_password_key];\n\n    if (password.value !== confirm_password.value) {\n      return {        \n        mismatchedPasswords: true\n      };\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/shared/equal-validator.directive.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".login-panel {\\n    margin: auto;\\n    width: 40%;\\n}\\n\\n.error-message {\\n    padding-left: 20px;\\n    color: red;\\n}\\n\\nbutton:disabled {\\n  cursor: not-allowed;\\n  pointer-events: all !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.css\n// module id = ../../../../../src/app/components/signup/signup.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"card-panel login-panel\\\">\\n        <form class=\\\"col s12\\\" [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <h4 class=\\\"center-align\\\">Sign up</h4>\\n            <!-- error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"errors?.summary\\\">\\n              <p class=\\\"error-message\\\">{{ errors.summary }}</p>\\n            </div>\\n            \\n            <!-- username -->\\n            <!-- <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"username\\\" \\n                          type=\\\"text\\\" \\n                          name=\\\"username\\\" \\n                          formControlName=\\\"username\\\" \\n                          required />\\n                    <label for='username'>Username</label>\\n                </div>\\n            </div> -->\\n            <!-- username error message -->\\n            <!-- <div class=\\\"row\\\" *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"username.errors.required\\\">Username is required, please enter your username.</p>\\n            </div> -->\\n\\n            <!-- email -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"email\\\" \\n                          type=\\\"email\\\" \\n                          name=\\\"email\\\" \\n                          formControlName=\\\"email\\\"\\n                          required />\\n                    <label for='email'>Email</label>\\n                </div>\\n            </div>\\n            <!-- email error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"email.errors.required\\\">Email is required, please enter your email address.</p>\\n              <p class=\\\"error-message\\\" *ngIf=\\\"email.errors.pattern\\\">Not a valid email address, please enter another one.</p>\\n            </div>\\n            <!-- password -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          class=\\\"validate\\\" \\n                          id=\\\"password\\\" \\n                          type=\\\"password\\\" \\n                          name=\\\"password\\\" \\n                          formControlName=\\\"password\\\" />\\n                    <label for='password'>Password</label>\\n                </div>\\n            </div>\\n            <!-- password error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n              <p class=\\\"error-message\\\" *ngIf=\\\"password.errors.required\\\">Password is required, please enter your password.</p>\\n            </div> \\n            <!-- confirm password -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                    <input \\n                          id=\\\"confirm_password\\\" \\n                          type=\\\"password\\\" \\n                          name=\\\"confirm_password\\\" \\n                          class=\\\"validate\\\" \\n                          formControlName=\\\"confirm_password\\\" />\\n                    <label for=\\\"confirm_password\\\">Confirm Password</label>\\n                </div>\\n            </div>\\n            <!-- confirm_password error message -->\\n            <div class=\\\"row\\\" *ngIf=\\\"confirm_password.dirty || confirm_password.touched\\\">\\n                <p class=\\\"error-message\\\" *ngIf=\\\"confirm_password.errors?.required\\\">Confirm password is required, please enter your confirm password.</p>  \\n                <p class=\\\"error-message\\\" *ngIf=\\\"!confirm_password.errors && signupForm.hasError('mismatchedPasswords')\\\">Password not matched.</p>\\n            </div>\\n            <!-- signup button -->\\n            <div class=\\\"row right-align\\\">\\n                <button \\n                        type=\\\"submit\\\"\\n                        id=\\\"signupBtn\\\"\\n                        [disabled]=\\\"!signupForm.valid\\\"\\n                        class=\\\"waves-effect waves-light btn indigo lighten-1\\\">Sign up</button>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <p class=\\\"right-align\\\"> Already have an account?  <a [routerLink]=\\\"['/login']\\\">Login</a></p>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.html\n// module id = ../../../../../src/app/components/signup/signup.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'app/services/auth.service';\nimport { User } from 'app/models/user.model';\nimport { validateEqualValidator } from 'app/components/shared/equal-validator.directive';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n\n  constructor(\n    private authService: AuthService, \n    private fb: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.signupForm = this.fb.group({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\")\n      ]),\n      password: [null, Validators.required],\n      confirm_password: [null, Validators.required]\n    }, { validator: validateEqualValidator('password', 'confirm_password') });\n    \n  }\n\n  get email() {\n    return this.signupForm.get('email');\n  }\n\n  get password() {\n    return this.signupForm.get('password');\n  }\n\n  get confirm_password() {\n    return this.signupForm.get('confirm_password');\n  }\n\n  onSubmit() {\n    const userInfo = new User(\n      this.signupForm.value.email,\n      this.signupForm.value.password\n    );\n\n    this.authService.signup(userInfo)\n                  .subscribe(() => {\n                    this.router.navigateByUrl('/login');\n                  });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/components/signup/signup.component.ts","export class User {\n    constructor(public email: string,\n                public password: string) {}\n}\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/models/user.model.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/toPromise';\n\nimport { ErrorService } from './error.service';\nimport { User } from '../models/user.model';\n\n@Injectable()\nexport class AuthService {\n\n    constructor(\n      private http: Http, \n      private errorService: ErrorService\n    ) { }\n\n    /**\n     * Register a user.\n     */\n    signup(user: User) {\n        const body = JSON.stringify(user);\n        const headers = new Headers({ \n            'Content-Type': 'application/json'\n        });\n        const options = new RequestOptions({ headers: headers });\n        return this.http.post('api/v1/auth/signup', body, options)\n                        .map((response: Response) => response.json());\n                        // .toPromise()\n                        // .then(function (res) {\n                        //     console.log('signup returned below');\n                        //     console.log(res);\n                        // })\n\n                        // .map((response: Response) => response.json())\n                        // .catch((error: Response) => {\n                        //     this.errorService.handleError(error.json());\n                        //     return Observable.throw(error.json());\n                        // });\n    }\n\n    /**\n     * User login\n     */\n    login(user: User) {\n        const body = JSON.stringify(user);\n        const headers = new Headers({\n            'Content-Type': 'application/json'\n        });\n        const options = new RequestOptions({ headers: headers });\n        return this.http.post('api/v1/auth/login', body, options)\n                        .map((response: Response) => { \n                            let res = response.json();\n                            res.status = response.status;\n                            return res;\n                        })\n                        .catch((error: Response) => {\n                            console.log('auth error');\n                            this.errorService.handleError(error.json())\n                            return Observable.throw(error.json());\n                        })\n                        // .toPromise()\n                        // .then(function (res) {\n                        //     return res.json();\n                        // })\n    }\n\n    /** \n     * Authenticate a user. Save a token string in localStorage.\n     */\n    authenticateUser(token, email) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('email', email);\n    } \n\n    /**\n     * Check if a user is authenticated.\n     */\n    isUserAuthenticated() {\n        return localStorage.getItem('token') !== null;\n    }\n\n    /**\n     * De-authenticate a user\n     */\n    deauthenticate() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('email');\n    }\n\n    /**\n     * Get token value\n     */\n    getToken() {\n        return localStorage.getItem('token');\n    }\n\n    /**\n     * Get email\n     */\n    getEmail() {\n        return localStorage.getItem('email');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/auth.service.ts","import { Injectable, EventEmitter } from '@angular/core';\nimport { Error } from '../Models/error.model';\n\n@Injectable()\nexport class ErrorService {\n\n  constructor() { }\n\n  errorOccurred = new EventEmitter<Error>();\n\n  handleError(error: any) {\n      console.log(error);\n      const errorData = new Error(error.success, error.message);\n      this.errorOccurred.emit(errorData);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/error.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport { AuthService } from './auth.service';\nimport { ErrorService } from './error.service';\nimport { User } from '../models/user.model';\n\n@Injectable()\nexport class UsersService {\n\n  constructor(private http: Http, private errorService: ErrorService) { }\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/app/services/users.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/diwang/Documents/bittiger_fullStack/Project/HiChat-Capstone/HiChat-client/src/main.ts"],"sourceRoot":"webpack:///"}